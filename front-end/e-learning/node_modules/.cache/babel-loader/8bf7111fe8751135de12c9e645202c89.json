{"ast":null,"code":"var _jsxFileName = \"/Users/sun-asterisk/sph_els_rob/front-end/e-learning/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"./Header\";\nimport { signUp } from \"../actions\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = _ref => {\n  _s();\n\n  let {\n    logUp,\n    auth\n  } = _ref;\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm_password, setConfirmPassword] = useState(\"\");\n  const [error_firstname, setErrorFirstname] = useState(\"\");\n  const [error_lastname, setErrorLastname] = useState(\"\");\n  const [error_email, setErrorEmail] = useState(\"\");\n  const [error_password, setErrorPassword] = useState(\"\");\n  const [error_confirm_password, setErrorConfirmPassword] = useState(\"\");\n\n  const validate = () => {\n    var no_error = true;\n\n    if (firstname === \"\") {\n      setErrorFirstname(\"Field is required!\");\n      no_error = false;\n    }\n\n    if (lastname === \"\") {\n      setErrorLastname(\"Field is required!\");\n      no_error = false;\n    }\n\n    if (/$^|.+@.+..+/.test(email)) {\n      setErrorEmail(\"Field is required!\");\n      no_error = false;\n    }\n\n    if (email === \"\") {\n      setErrorEmail(\"Field is required!\");\n      no_error = false;\n    }\n\n    if (password === \"\") {\n      setErrorPassword(\"Field is required!\");\n      no_error = false;\n    }\n\n    if (confirm_password === \"\") {\n      setErrorConfirmPassword(\"Field is required!\");\n      no_error = false;\n    }\n\n    if (password === confirm_password) {\n      setErrorConfirmPassword(\"Confirm password does not match!\");\n      no_error = false;\n    }\n\n    return no_error;\n  };\n\n  const onSignup = e => {\n    e.preventDefault();\n    const data = {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      password: password,\n      confirm_password: confirm_password\n    };\n\n    if (validate()) {\n      console.log(\"data validated\");\n      signUp(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        onSubmit: onSignup,\n        sx: {\n          marginTop: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"First Name\",\n                autoFocus: true,\n                error: error_firstname === \"\" ? false : true,\n                helperText: error_firstname,\n                onChange: e => setFirstname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"lastName\",\n                label: \"Last Name\",\n                name: \"lastName\",\n                autoComplete: \"family-name\",\n                onChange: e => setLastname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email\",\n                name: \"email\",\n                autoComplete: \"email\",\n                autoFocus: true,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"confirm-password\",\n                label: \"Confirm Password\",\n                type: \"password\",\n                id: \"confirm-password\",\n                autoComplete: \"password\",\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onSignup,\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 2,\n              mb: 2,\n              bgcolor: \"#05386b\",\n              \"&:hover\": {\n                backgroundColor: \"#edf5e1\",\n                color: \"black\"\n              }\n            },\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"FV1Wy4wVMxJbn8g+yzIPLMSZvr4=\");\n\n_c = Signup;\n\nconst mapStateToProps = state => {\n  console.log(state.auth);\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signUp\n})(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/sun-asterisk/sph_els_rob/front-end/e-learning/src/components/Signup.js"],"names":["React","useState","connect","Header","signUp","Button","Box","Container","TextField","Typography","Link","FormControlLabel","Checkbox","Grid","Signup","logUp","auth","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","confirm_password","setConfirmPassword","error_firstname","setErrorFirstname","error_lastname","setErrorLastname","error_email","setErrorEmail","error_password","setErrorPassword","error_confirm_password","setErrorConfirmPassword","validate","no_error","test","onSignup","e","preventDefault","data","console","log","marginTop","display","flexDirection","alignItems","target","value","mt","mb","bgcolor","backgroundColor","color","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\nimport { signUp } from \"../actions\";\n\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from '@mui/material/Grid';\n\nconst Signup = ({ logUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm_password, setConfirmPassword] = useState(\"\");\n  const [error_firstname, setErrorFirstname] = useState(\"\");\n  const [error_lastname, setErrorLastname] = useState(\"\");\n  const [error_email, setErrorEmail] = useState(\"\");\n  const [error_password, setErrorPassword] = useState(\"\");\n  const [error_confirm_password, setErrorConfirmPassword] = useState(\"\");\n\n  const validate = () => {\n    var no_error = true;\n    if(firstname === \"\") {\n      setErrorFirstname(\"Field is required!\");\n      no_error = false;\n    }\n    if(lastname === \"\") {\n      setErrorLastname(\"Field is required!\");\n      no_error = false;\n    }\n    if((/$^|.+@.+..+/).test(email)) {\n      setErrorEmail(\"Field is required!\");\n      no_error = false;\n    }\n    if(email === \"\") {\n      setErrorEmail(\"Field is required!\");\n      no_error = false;\n    }\n    if(password === \"\") {\n      setErrorPassword(\"Field is required!\");\n      no_error = false;\n    }\n    if(confirm_password === \"\") {\n      setErrorConfirmPassword(\"Field is required!\");\n      no_error = false;\n    }\n    if(password === confirm_password) {\n      setErrorConfirmPassword(\"Confirm password does not match!\");\n      no_error = false;\n    }\n    return no_error;\n  }\n\n  const onSignup = e => {\n    e.preventDefault();\n    const data = {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      password: password,\n      confirm_password: confirm_password\n    };\n    if(validate())\n      {\n        console.log(\"data validated\");\n        signUp(data);\n      }\n  };\n\n  return (\n    <div>\n      <Header />\n      <Container maxWidth='xs'>\n        <Box\n          onSubmit={onSignup}\n          sx={{\n            marginTop: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography component='h1' variant='h5'>\n            Register\n          </Typography>\n          <form>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                error = { error_firstname === \"\" ? false : true }\n                helperText= {error_firstname}\n                onChange={e => setFirstname(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"family-name\"\n                onChange={e => setLastname(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin='normal'\n                required\n                fullWidth\n                id='email'\n                label='Email'\n                name='email'\n                autoComplete='email'\n                autoFocus\n                onChange={e => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin='normal'\n                required\n                fullWidth\n                name='password'\n                label='Password'\n                type='password'\n                id='password'\n                autoComplete='password'\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin='normal'\n                required\n                fullWidth\n                name='confirm-password'\n                label='Confirm Password'\n                type='password'\n                id='confirm-password'\n                autoComplete='password'\n                onChange={e => setConfirmPassword(e.target.value)}\n              />\n            </Grid>\n          </Grid>\n            <Button\n              onClick={onSignup}\n              type='submit'\n              fullWidth\n              variant='contained'\n              sx={{\n                mt: 2,\n                mb: 2,\n                bgcolor: \"#05386b\",\n                \"&:hover\": {\n                  backgroundColor: \"#edf5e1\",\n                  color: \"black\",\n                },\n              }}\n            >\n              SIGN UP\n            </Button>\n          </form>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state.auth);\n  return {\n    auth: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps, { signUp })(Signup);\n"]},"metadata":{},"sourceType":"module"}