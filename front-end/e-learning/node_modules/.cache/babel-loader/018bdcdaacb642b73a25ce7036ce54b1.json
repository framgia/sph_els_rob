{"ast":null,"code":"import { $CombinedState } from \"redux\";\nimport axios from \"../apis/api\";\nexport const logIn = formValues => async dispatch => {\n  const values = {};\n  console.log(formValues);\n  axios.get('/sanctum/csrf-cookie').then(response => {\n    axios.post('/api/login', formValues).then(res => {\n      values = {\n        user: res.data.user,\n        token: res.data.token\n      };\n    }).catch(error => console.error(`Error: ${error}`));\n  });\n  console.log(values);\n  dispatch({\n    type: 'LOG_IN',\n    payload: values\n  });\n};","map":{"version":3,"sources":["/Users/sun-asterisk/sph_els_rob/front-end/e-learning/src/actions/index.js"],"names":["$CombinedState","axios","logIn","formValues","dispatch","values","console","log","get","then","response","post","res","user","data","token","catch","error","type","payload"],"mappings":"AAAA,SAASA,cAAT,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,KAAK,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACnD,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAF,EAAAA,KAAK,CAACO,GAAN,CAAU,sBAAV,EAAkCC,IAAlC,CAAuCC,QAAQ,IAAI;AACjDT,IAAAA,KAAK,CAACU,IAAN,CAAW,YAAX,EAAyBR,UAAzB,EACGM,IADH,CACQG,GAAG,IAAI;AACXP,MAAAA,MAAM,GAAG;AACPQ,QAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASD,IADR;AAEPE,QAAAA,KAAK,EAAEH,GAAG,CAACE,IAAJ,CAASC;AAFT,OAAT;AAID,KANH,EAOGC,KAPH,CAOSC,KAAK,IAAIX,OAAO,CAACW,KAAR,CAAe,UAASA,KAAM,EAA9B,CAPlB;AAQD,GATD;AAUAX,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,EAAAA,QAAQ,CAAC;AACPc,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,OAAO,EAAEd;AAFF,GAAD,CAAR;AAID,CAlBM","sourcesContent":["import { $CombinedState } from \"redux\";\nimport axios from \"../apis/api\";\n\nexport const logIn = formValues => async dispatch => {\n  const values = {};\n  console.log(formValues);\n  axios.get('/sanctum/csrf-cookie').then(response => {\n    axios.post('/api/login', formValues)\n      .then(res => {\n        values = {\n          user: res.data.user,\n          token: res.data.token\n        };\n      })\n      .catch(error => console.error(`Error: ${error}`));\n  });\n  console.log(values);\n  dispatch({\n    type: 'LOG_IN',\n    payload: values\n  });\n};\n"]},"metadata":{},"sourceType":"module"}